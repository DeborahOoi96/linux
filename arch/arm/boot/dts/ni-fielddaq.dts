/dts-v1/;
/include/ "ni-zynq.dtsi"

/ {
	model = "NI FieldDAQ";
	compatible = "ni,zynq", "xlnx,zynq-7000";

	/*
	 * This 100MHz reference clock is actually the output of a Si514;
	 * However, we do not declare it in the device tree because it is
	 * steered in usermode, and therefore we don't want a kernel driver
	 * to attach to it.
	 */
	ref100: oscillator {
		compatible = "fixed-clock";
		#clock-cells = <0>;
		clock-frequency = <100000000>;
	};

	amba@0 {
		i2c0: i2c@e0004000 {
			/* Override ni-zynq.dtsi; we do not have a CPLD at 0x40. */
			nicpld@40 {
				status = "disabled";
			};

			tmp451@4C {
				compatible = "ti,tmp451";
				reg = <0x4C>;
				vcc-supply = <&regulator_vccpint>;
			};

			si5351c: clock-generator@60 {
				compatible = "silabs,si5351c";
				reg = <0x60>;
				#address-cells = <1>;
				#size-cells = <0>;
				#clock-cells = <1>;

				clocks = <&ref100>;
				clock-names = "clkin";

				silabs,pll-source = <0 1>, <1 0>;
				silabs,pll-frequency = <0 737280000>;

				umber-btsi0 {
					reg = <0>;
					silabs,drive-strength = <8>;
					silabs,multisynth-source = <0>;
					silabs,clock-source = <0>;
					silabs,disable-state = <0>;
					clock-frequency = <12800000>;
				};

				umber-sysclk {
					reg = <1>;
					silabs,drive-strength = <8>;
					silabs,multisynth-source = <0>;
					silabs,clock-source = <0>;
					silabs,disable-state = <0>;
					clock-frequency = <80000000>;
				};

				umber-btsi1 {
					reg = <2>;
					silabs,drive-strength = <8>;
					silabs,multisynth-source = <0>;
					silabs,clock-source = <0>;
					silabs,disable-state = <0>;
					clock-frequency = <13107200>;
				};

				umber-btsi3 {
					reg = <4>;
					silabs,drive-strength = <8>;
					silabs,multisynth-source = <0>;
					silabs,clock-source = <0>;
					silabs,disable-state = <0>;
					clock-frequency = <10240000>;
				};

				umber-btsi4 {
					reg = <7>;
					silabs,drive-strength = <8>;
					silabs,multisynth-source = <0>;
					silabs,clock-source = <0>;
					silabs,disable-state = <0>;
					clock-frequency = <12288000>;
				};
			};
		};
	};

	leds {
		compatible = "gpio-leds";

		/* "LED_USER_RED" is on GPIO1 */
		status {
			label = "nilrt:status:red";
			gpios = <&gpio 1 0>;
			default-state = "on";
		};

		/* "LED_USER_GREEN" is on GPIO15 */
		active {
			label = "nilrt:status:green";
			gpios = <&gpio 15 0>;
			default-state = "on";
		};

		/* "ZYNQ_LED0_P1" is on GPIO47 */
		port1 {
			label = "nilrt:port1:green";
			gpios = <&gpio 47 0>;
			linux,default-trigger = "dsa-0:00:01:link";
		};

		/* "ZYNQ_LED0_P2" is on GPIO46 */
		port2 {
			label = "nilrt:port2:green";
			gpios = <&gpio 46 0>;
			linux,default-trigger = "dsa-0:00:02:link";
		};
	};

	gpio_keys {
		compatible = "gpio-keys";
		#address-cells = <1>;
		#size-cells = <0>;

		/* Reset switch is on GPIO48 */
		reset_sw@0 {
			label = "reset_sw";
			gpios = <&gpio 48 1 /* GPIO_ACTIVE_LOW */>;
			linux,code = <408>; /* KEY_RESTART */
			gpio-key,wakeup;
		};
	};

	gpio_restart {
		compatible = "gpio-restart";

		/* ~PS_FORCE_RESET is on GPIO44 */
		gpios = <&gpio 44 1 /* GPIO_ACTIVE_LOW */>;
		priority = <200>;
	};

	dsa@0 {
		compatible = "marvell,dsa";
		#address-cells = <2>;
		#size-cells = <0>;

		dsa,ethernet = <&gem0>;
		dsa,mii-bus = <&gem0>;

		switch@0 {
			#address-cells = <1>;
			#size-cells = <0>;
			/* MDIO addr 0x0 (single-chip addressing), switch 0 */
			reg = <0 0>;

			port@0 {
				reg = <0x0>;
				label = "cpu";
			};

			port@1 {
				reg = <0x1>;
				label = "sw0";
				/* phy-handle = <&swport1>; */
			};

			port@2 {
				reg = <0x2>;
				label = "sw1";
				/* phy-handle = <&swport2>; */
			};
		};
	};
};

&gem0 {
	status = "okay";
	emio-speed-gpios = <0>,
			   <&gpio 54 0>;

	#address-cells = <0x1>;
	#size-cells = <0x0>;

	fixed-link {
		speed = <1000>;
		full-duplex;
		reg = <0>;
	};
};

&uart1 {
	status = "okay";
};

&usb0 {
	status = "okay";
	dr_mode = "host";
};

&watchdog0 {
	status = "okay";
	reset-on-timeout;
};
